{"version":3,"sources":["redux/actions/actions.js","components/FilterMenu.jsx","components/ListItem.jsx","redux/actions/actionTypes.js","components/ListContainer.jsx","components/MenuWrapper.jsx","redux/initialState.js","redux/reducers/rootReducer.js","App.js","reportWebVitals.js","index.js"],"names":["nextTaskId","FilterMenu","props","className","tasksArr","length","type","autoFocus","onClick","clickAll","clickActive","clickCompleted","clickClearCompleted","connect","state","tasks","markTask","taskID","payload","deleteTask","useState","hover","setHover","strikeOutStyles","textDecoration","task","completed","color","hoverStyles","visibility","float","margin","onMouseEnter","onMouseLeave","id","style","tasksArrToPass","filterSelected","filter","addTask","newTask","setNewTask","placeholder","name","onKeyDown","event","keyCode","alert","taskInput","target","value","onChange","map","index","selectFilter","clearCompletedTasks","taskIDs","IDsOfCompletedTasks","initialState","rootReducer","action","idToDelete","updatedTasksArr","idToToggle","markedTasksArr","IDsofTasksToClear","find","App","store","createStore","compose","window","__REDUX_DEVTOOLS_EXTENSION__","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f65a037b.chunk.js","sourcesContent":["import {\n\tADD_TASK,\n\tDELETE_TASK,\n\tTOGGLE_COMPLETED,\n\tCLEAR_COMPLETED,\n\tSELECT_FILTER,\n} from \"./actionTypes\";\n\nlet nextTaskId = 4;\n\nexport const addTask = (newTask) => ({\n\ttype: ADD_TASK,\n\tpayload: {\n\t\ttaskID: nextTaskId++,\n\t\t...newTask,\n\t},\n});\n\nexport const deleteTask = (taskID) => ({\n\ttype: DELETE_TASK,\n\tpayload: {\n\t\ttaskID: taskID,\n\t},\n});\n\nexport const markTask = (taskID) => ({\n\ttype: TOGGLE_COMPLETED,\n\tpayload: {\n\t\ttaskID: taskID,\n\t},\n});\n\nexport const clearCompletedTasks = (taskIDs) => ({\n\ttype: CLEAR_COMPLETED,\n\tpayload: {\n\t\ttaskIDs: taskIDs,\n\t},\n});\n\nexport const selectFilter = (filter) => ({\n\ttype: SELECT_FILTER,\n\tpayload: {\n\t\tfilter: filter,\n\t},\n});\n","import React from \"react\";\n// import { connect } from \"react-redux\";\n\nimport \"../app.css\";\n\nfunction FilterMenu(props) {\n\treturn (\n\t\t<div className=\"menu-wrapper\">\n\t\t\t<p>{props.tasksArr.length} items remaining</p>\n\t\t\t<div className=\"btn-wrapper\">\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName=\"filter-btn all\"\n\t\t\t\t\tautoFocus\n\t\t\t\t\tonClick={props.clickAll}\n\t\t\t\t>\n\t\t\t\t\tALL\n\t\t\t\t</button>\n\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName=\"filter-btn active\"\n\t\t\t\t\tonClick={props.clickActive}\n\t\t\t\t>\n\t\t\t\t\tACTIVE\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName=\"filter-btn completed\"\n\t\t\t\t\tonClick={props.clickCompleted}\n\t\t\t\t>\n\t\t\t\t\tCOMPLETED\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclassName=\"filter-btn clr-completed\"\n\t\t\t\tonClick={props.clickClearCompleted}\n\t\t\t>\n\t\t\t\tCLEAR COMPLETED\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport default FilterMenu;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { markTask, deleteTask } from \"../redux/actions/actions\";\n\nfunction ListItem(props) {\n\t//local state used to manipulate hover styles for the remove (X) button\n\tconst [hover, setHover] = useState(false);\n\n\t//inline styles object for the task-name, to differentiate between active and completed tasks\n\tlet strikeOutStyles = {\n\t\ttextDecoration: props.task.completed ? \"line-through\" : \"none\",\n\t\tcolor: props.task.completed ? \"grey\" : \"black\",\n\t};\n\n\t//inline styles object for hover event.\n\tlet hoverStyles = {\n\t\tvisibility: hover ? \"visible\" : \"hidden\",\n\t\tfloat: \"right\",\n\t\tmargin: \"0 1rem 0 0\",\n\t};\n\n\t//The below two functions are event listeners which imitate a hover effect.\n\tfunction handleOnMouseEnter() {\n\t\tsetHover(() => {\n\t\t\treturn !hover;\n\t\t});\n\t}\n\tfunction handleOnMouseLeave() {\n\t\tsetHover(() => {\n\t\t\treturn !hover;\n\t\t});\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"list-item-wrapper\"\n\t\t\tonMouseEnter={handleOnMouseEnter}\n\t\t\tonMouseLeave={handleOnMouseLeave}\n\t\t>\n\t\t\t<p onClick={() => props.markTask(props.id)} style={strikeOutStyles}>\n\t\t\t\t{props.task.task}\n\t\t\t\t<span\n\t\t\t\t\tstyle={hoverStyles}\n\t\t\t\t\tclassName=\"remove-task-btn\"\n\t\t\t\t\tonClick={() => props.deleteTask(props.id)}\n\t\t\t\t>\n\t\t\t\t\tX\n\t\t\t\t</span>\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n//redux function that maps the redux store/state to the component props\nfunction mapStateToProps(state) {\n\treturn {\n\t\ttasks: state.tasks,\n\t};\n}\n\n//used object destructuring rather than writing another function for mapDispatchToProps\n//which genrally maps dispatch actions to props.\nexport default connect(mapStateToProps, { markTask, deleteTask })(ListItem);\n","export const ADD_TASK = \"ADD_TASK\";\nexport const DELETE_TASK = \"DELETE_TASK\";\nexport const TOGGLE_COMPLETED = \"TOGGLE_COMPLETED\";\nexport const CLEAR_COMPLETED = \"CLEAR_COMPLETED\";\nexport const SELECT_FILTER = \"SELECT_FILTER\";\n","import { React, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Listitem from \"./ListItem\";\nimport { addTask } from \"../redux/actions/actions\";\n\nimport \"./components.css\";\n\nfunction ListContainer(props) {\n\tconst [newTask, setNewTask] = useState(\"\");\n\n\tfunction handleOnChange(event) {\n\t\tlet { value } = event.target;\n\t\tsetNewTask(() => {\n\t\t\treturn value;\n\t\t});\n\t}\n\n\tfunction handleOnKeyDown(event) {\n\t\tif (event.keyCode === 13) {\n\t\t\tif (newTask.length === 0) {\n\t\t\t\talert(\"Please enter a task\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst taskInput = {\n\t\t\t\ttask: newTask,\n\t\t\t\tcompleted: false,\n\t\t\t};\n\t\t\tprops.addTask(taskInput);\n\n\t\t\tevent.target.value = \"\";\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"list-container-wrapper\">\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tclassName=\"task-input\"\n\t\t\t\tplaceholder=\"What needs to be done?\"\n\t\t\t\tname=\"newTask\"\n\t\t\t\tid=\"newTask\"\n\t\t\t\tonKeyDown={handleOnKeyDown}\n\t\t\t\tonChange={handleOnChange}\n\t\t\t/>\n\t\t\t{props.tasksArr.map((task, index) => {\n\t\t\t\treturn <Listitem key={index} id={task.taskID} task={task} />;\n\t\t\t})}\n\t\t</div>\n\t);\n}\n\n//redux function that maps the redux store/state to the component props\nfunction mapStateToProps(state) {\n\tlet tasksArrToPass = state.tasks;\n\t//get tasks with selected filter and map the array to props.\n\tif (state.filterSelected === \"all\") {\n\t\ttasksArrToPass = state.tasks;\n\t}\n\tif (state.filterSelected === \"completed\") {\n\t\ttasksArrToPass = state.tasks.filter((task) => task.completed === true);\n\t}\n\tif (state.filterSelected === \"active\") {\n\t\ttasksArrToPass = state.tasks.filter((task) => task.completed === false);\n\t}\n\treturn {\n\t\ttasksArr: tasksArrToPass,\n\t};\n}\n\n//used object destructuring rather than writing another function for mapDispatchToProps\n//which genrally maps dispatch actions to props.\nexport default connect(mapStateToProps, { addTask })(ListContainer);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n//imported actions below\nimport { selectFilter, clearCompletedTasks } from \"../redux/actions/actions\";\nimport FilterMenu from \"./FilterMenu\";\nimport ListContainer from \"./ListContainer\";\n\n//This is a wrapper component for filtermenu. Created for better code structure.\n\nfunction MenuWrapper(props) {\n\t//The below four functions are passed as props to the buttons in FilterMenu component\n\t//These function dispatch redux actions.\n\tfunction onClickAll() {\n\t\tprops.selectFilter(\"all\");\n\t}\n\n\tfunction onClickActive() {\n\t\tprops.selectFilter(\"active\");\n\t}\n\n\tfunction onClickCompleted() {\n\t\tprops.selectFilter(\"completed\");\n\t}\n\n\tfunction onClickClearCompleted() {\n\t\tconst completedTasksArr = props.tasksArr.filter(\n\t\t\t(task) => task.completed === true\n\t\t);\n\t\tconst IDsOfCompletedTasks = completedTasksArr.map((task) => task.taskID);\n\t\t//the code above is to get an array of IDs of tasks that are marked as completed\n\t\tprops.clearCompletedTasks(IDsOfCompletedTasks);\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<FilterMenu\n\t\t\t\tclickAll={onClickAll}\n\t\t\t\tclickActive={onClickActive}\n\t\t\t\tclickCompleted={onClickCompleted}\n\t\t\t\tclickClearCompleted={onClickClearCompleted}\n\t\t\t\ttasksArr={props.tasksArr}\n\t\t\t/>\n\t\t\t<ListContainer tasksArr={props.tasksArr} />\n\t\t</div>\n\t);\n}\n\n//redux function that maps the redux store/state to the component props\nfunction mapStateToProps(state) {\n\treturn {\n\t\ttasksArr: state.tasks,\n\t};\n}\n\n//used object destructuring rather than writing another function for mapDispatchToProps\n//which genrally maps dispatch actions to props.\nexport default connect(mapStateToProps, { selectFilter, clearCompletedTasks })(\n\tMenuWrapper\n);\n","let initialState = {\n\ttasks: [\n\t\t{\n\t\t\ttaskID: 1,\n\t\t\ttask: \"task 1\",\n\t\t\tcompleted: false,\n\t\t},\n\t\t{\n\t\t\ttaskID: 2,\n\t\t\ttask: \"task 2\",\n\t\t\tcompleted: false,\n\t\t},\n\t\t{\n\t\t\ttaskID: 3,\n\t\t\ttask: \"task 3\",\n\t\t\tcompleted: false,\n\t\t},\n\t],\n\tfilterSelected: \"\",\n};\n\nexport default initialState;\n","import initialState from \"../initialState\";\n\nfunction rootReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase \"ADD_TASK\":\n\t\t\treturn {\n\t\t\t\ttasks: [...state.tasks, action.payload],\n\t\t\t};\n\t\tcase \"DELETE_TASK\":\n\t\t\tconst idToDelete = action.payload.taskID;\n\t\t\tlet updatedTasksArr = state.tasks.filter((task) => {\n\t\t\t\treturn task.taskID !== idToDelete;\n\t\t\t});\n\t\t\treturn {\n\t\t\t\ttasks: updatedTasksArr,\n\t\t\t};\n\t\tcase \"TOGGLE_COMPLETED\":\n\t\t\tconst idToToggle = action.payload.taskID;\n\t\t\tlet markedTasksArr = state.tasks.map((task, index) => {\n\t\t\t\tif (task.taskID === idToToggle) {\n\t\t\t\t\treturn { ...task, completed: !state.tasks[index].completed };\n\t\t\t\t}\n\t\t\t\treturn task;\n\t\t\t});\n\t\t\treturn {\n\t\t\t\ttasks: markedTasksArr,\n\t\t\t};\n\t\tcase \"CLEAR_COMPLETED\":\n\t\t\tconst IDsofTasksToClear = action.payload.taskIDs;\n\t\t\tlet clearedArr = state.tasks;\n\t\t\tif (IDsofTasksToClear.length === 0) {\n\t\t\t\tclearedArr = state.tasks;\n\t\t\t} else {\n\t\t\t\tclearedArr = state.tasks.filter((task) => {\n\t\t\t\t\treturn IDsofTasksToClear.find((id) => {\n\t\t\t\t\t\treturn task.taskID !== id;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttasks: clearedArr,\n\t\t\t};\n\t\tcase \"SELECT_FILTER\":\n\t\t\tconst filter = action.payload.filter;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfilterSelected: filter,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default rootReducer;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createStore, compose } from \"redux\";\n\nimport MenuWrapper from \"./components/MenuWrapper\";\nimport rootReducer from \"./redux/reducers/rootReducer\";\n\nimport \"./app.css\";\n\nfunction App() {\n\t//create redux store\n\tconst store = createStore(\n\t\trootReducer,\n\t\tcompose(\n\t\t\t//code to switch on redux devtools chrome extension\n\t\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ &&\n\t\t\t\twindow.__REDUX_DEVTOOLS_EXTENSION__()\n\t\t)\n\t);\n\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<div className=\"app-wrapper\">\n\t\t\t\t<p className=\"list-title \">My list</p>\n\t\t\t\t<hr />\n\t\t\t\t<MenuWrapper />\n\t\t\t</div>\n\t\t</Provider>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}